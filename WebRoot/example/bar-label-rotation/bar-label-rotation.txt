bar-label-rotation

var posList = [\n    \'left\', \'right\', \'top\', \'bottom\',\n    \'inside\',\n    \'insideTop\', \'insideLeft\', \'insideRight\', \'insideBottom\',\n    \'insideTopLeft\', \'insideTopRight\', \'insideBottomLeft\', \'insideBottomRight\'\n];\n\napp.configParameters = {\n    rotate: {\n        min: -90,\n        max: 90\n    },\n    align: {\n        options: {\n            left: \'left\',\n            center: \'center\',\n            right: \'right\'\n        }\n    },\n    verticalAlign: {\n        options: {\n            top: \'top\',\n            middle: \'middle\',\n            bottom: \'bottom\'\n        }\n    },\n    position: {\n        options: echarts.util.reduce(posList, function (map, pos) {\n            map[pos] = pos;\n            return map;\n        }, {})\n    },\n    distance: {\n        min: 0,\n        max: 100\n    }\n};\n\napp.config = {\n    rotate: 90,\n    align: \'left\',\n    verticalAlign: \'middle\',\n    position: \'insideBottom\',\n    distance: 15,\n    onChange: function () {\n        var labelOption = {\n            normal: {\n                rotate: app.config.rotate,\n                align: app.config.align,\n                verticalAlign: app.config.verticalAlign,\n                position: app.config.position,\n                distance: app.config.distance\n            }\n        };\n        myChart.setOption({\n            series: [{\n                label: labelOption\n            }, {\n                label: labelOption\n            }, {\n                label: labelOption\n            }, {\n                label: labelOption\n            }]\n        });\n    }\n};\n\n\nvar labelOption = {\n    normal: {\n        show: true,\n        position: app.config.position,\n        distance: app.config.distance,\n        align: app.config.align,\n        verticalAlign: app.config.verticalAlign,\n        rotate: app.config.rotate,\n        formatter: \'{c}  {name|{a}}\',\n        fontSize: 16,\n        rich: {\n            name: {\n                textBorderColor: \'#fff\'\n            }\n        }\n    }\n};\n\noption = {\n    color: [\'#003366\', \'#006699\', \'#4cabce\', \'#e5323e\'],\n    tooltip: {\n        trigger: \'axis\',\n        axisPointer: {\n            type: \'shadow\'\n        }\n    },\n    legend: {\n        data: [\'Forest\', \'Steppe\', \'Desert\', \'Wetland\']\n    },\n    toolbox: {\n        show: true,\n        orient: \'vertical\',\n        left: \'right\',\n        top: \'center\',\n        feature: {\n            mark: {show: true},\n            dataView: {show: true, readOnly: false},\n            magicType: {show: true, type: [\'line\', \'bar\', \'stack\', \'tiled\']},\n            restore: {show: true},\n            saveAsImage: {show: true}\n        }\n    },\n    calculable: true,\n    xAxis: [\n        {            type: \'category\',\n            axisTick: {show: false},\n            data: [\'2012\', \'2013\', \'2014\', \'2015\', \'2016\']\n        }\n    ],\n    yAxis: [\n        {\n            type: \'value\'\n        }\n    ],\n    series: [\n        {\n            name: \'Forest\',\n            type: \'bar\',\n            barGap: 0,\n            label: labelOption,\n            data: [320, 332, 301, 334, 390]\n        },\n        {\n            name: \'Steppe\',\n            type: \'bar\',\n            label: labelOption,\n            data: [220, 182, 191, 234, 290]\n        },\n        {\n            name: \'Desert\',\n            type: \'bar\',\n            label: labelOption,\n            data: [150, 232, 201, 154, 190]\n        },\n        {\n            name: \'Wetland\',\n            type: \'bar\',\n            label: labelOption,\n            data: [98, 77, 101, 99, 40]\n        }\n    ]\n};\n
